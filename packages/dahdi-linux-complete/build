############################################################################################
#                                                                                          #
#    package build functions: configure, compile, install, rules, and custom functions     #
#                                                                                          #
############################################################################################

## compile
build_compile() {

   if [ ! -f tools/Makefile ]; then
     # DAHDI >= 2.11.0
     patch -p0 < ${PACKAGE_SRC}/patches/Makefile.am.patch || return 1
     ( cd tools; aclocal; autoscan; autoupdate; autoreconf -i; )
     make || return 1
   else
     # DAHDI pre 2.11.0
     patch -p0 < ${PACKAGE_SRC}/patches/Makefile.patch || return 1
     make || return 1
     cd tools
     make tests fxstest || return 1
     cd ..
   fi;  

}

## install
build_install() {

   mkdir -p ${I_ROOT}/etc/init.d/ || return 1
   make DESTDIR="$I_ROOT" install config || return 1
   if [ "$(grep 'tests:' Makefile)" != "" ]; then
      # Handle DAHDI pre 2.11.0
      cd tools
      make DESTDIR="$I_ROOT" install-tests || return 1
      cd ..
   fi;
   
   # Add a link to the TC version as the debian version to fix the init script
   ln -s "$I_ROOT/usr/share/doc/tc/release.txt" /etc/debian_version

   # fix the kernel modules
   local kernel_mod_path="${I_ROOT}/lib/modules/${KERNEL}";
   if [ -d "${kernel_mod_path}" ]; then
      local tmp="$(echo ${kernel_mod_path}/*|sed -r -e s/modules\.\(alias\|dep\|symbols\)//g;)";
      mkdir -p "${kernel_mod_path}/kernel";
      mv $tmp "${kernel_mod_path}/kernel/" 2> /dev/null;
   fi;
}

## rules
build_rules() {

   tet_load
   tet_prepare
   tet_download
   tet_convert
   tet_unpack
   tet_patch
#   tet_configure
   tet_compile
   tet_install
   tet_split
   tet_strip
   tet_create
   tet_generate
   tet_check
   tet_test
   tet_package
   tet_encrypt

}

